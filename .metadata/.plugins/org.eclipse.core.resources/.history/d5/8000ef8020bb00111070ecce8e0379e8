package org.uberthought;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.os.AsyncTask;

public class DownloadFileTask extends AsyncTask<String, Void, InputStream> {
	public interface DownloadFileListener {
		abstract void onPostExecute(InputStream inputStream);
	}

	ArrayList<DownloadFileListener> listeners = new ArrayList<DownloadFileListener>();
	
	void addCallback(DownloadFileListener listener) {
		listeners.add(listener);
	}
	
	@Override
	protected InputStream doInBackground(String... urls) {
		InputStream inputStream = null;

		HttpClient httpClient = new DefaultHttpClient();
		HttpGet httpGet = new HttpGet(urls[0]);

		try {
			HttpResponse response = httpClient.execute(httpGet);
			HttpEntity entity = response.getEntity();
			inputStream = entity.getContent();
		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		return inputStream;
	}
	
	protected void onPostExecute(InputStream inputStream) {
		for(DownloadFileListener listener : listeners) {
			listener.onPostExecute(inputStream);
		}
	}
}
